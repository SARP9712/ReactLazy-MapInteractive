{"version":3,"file":"static/js/559.fda86a8f.chunk.js","mappings":"gJAEA,MAAMA,EAAS,iCCCR,SAASC,EAAWC,GACvB,MAAOC,EAASC,IAAYC,EAAAA,EAAAA,UAAS,OAC9BC,EAASC,IAAYF,EAAAA,EAAAA,WAAS,IAC9BG,EAAOC,IAAUJ,EAAAA,EAAAA,UAAS,MA0BjC,OAvBAK,EAAAA,EAAAA,WAAU,KACN,IAAIR,EAAa,OAECS,WACdJ,GAAW,GACXE,EAAS,MAEZ,IACG,MAAMG,QDbXD,eAAkCE,GAErC,IAEA,MAAMC,QAAYC,MAAM,GAADC,OAAIhB,EAAO,UAAAgB,OAASC,mBAAmBJ,GAAK,mBACnE,IAAIC,EAAII,GACJ,MAAM,IAAIC,MAAM,iCAADH,OAAkCF,EAAIM,aAIzD,aADmBN,EAAIO,QACX,EACZ,CAAC,MAAOb,GACJ,MAAM,IAAIW,MAAMX,EAAMc,QAC1B,CAKJ,CCLiCC,CAAmBrB,GACxCE,EAAWQ,EACd,CAAI,MAAMY,GACPf,EAASe,EAAIF,SACblB,EAAW,KACd,CAAC,QACEG,GAAW,EACd,GAIDkB,IAEF,CAACvB,IAEG,CAACC,UAASG,UAASE,QAC7B,C,aC9Be,SAASkB,EAAYC,GAA4B,IAADC,EAAA,IAA1B,YAAE1B,EAAW,QAAE2B,GAASF,EAC3D,MAAM,QAAExB,EAAO,QAAEG,EAAO,MAAEE,GAAUP,EAAWC,GAE/C,OAAKA,GAGH4B,EAAAA,EAAAA,KAAA,OAAKC,UAAU,8FAA6FC,UAC1GC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,sFAAqFC,SAAA,EAClGF,EAAAA,EAAAA,KAAA,UACEI,QAASL,EACTE,UAAU,uGACV,aAAW,eAAcC,SAC1B,SAIA1B,GACCwB,EAAAA,EAAAA,KAAA,KAAGC,UAAU,kDAAiDC,SAAC,gBAC7DxB,GACFsB,EAAAA,EAAAA,KAAA,KAAGC,UAAU,yCAAwCC,SAAExB,IAEvDL,IACE8B,EAAAA,EAAAA,MAAA,OAAKF,UAAU,wBAAuBC,SAAA,EACpCF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,0CAAyCC,SAAE7B,EAAQU,KAAKsB,UACtEL,EAAAA,EAAAA,KAAA,OACEM,IAAKjC,EAAQkC,MAAMC,IACnBC,IAAG,cAAAvB,OAAgBb,EAAQU,KAAKsB,QAChCJ,UAAU,yEAEZE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,qDAAoDC,SAAA,EACjEC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,EAAGF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,gCAA+BC,SAAC,aAAe,KAAiB,QAAfJ,EAAAzB,EAAQqC,eAAO,IAAAZ,OAAA,EAAfA,EAAkB,KAAM,UAC5FK,EAAAA,EAAAA,MAAA,KAAAD,SAAA,EAAGF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,gCAA+BC,SAAC,eAAc,IAAE7B,EAAQsC,WAC3ER,EAAAA,EAAAA,MAAA,KAAAD,SAAA,EAAGF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,gCAA+BC,SAAC,kBAAiB,IAAE7B,EAAQuC,cAC9ET,EAAAA,EAAAA,MAAA,KAAAD,SAAA,EAAGF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,gCAA+BC,SAAC,kBAAiB,IAAE7B,EAAQwC,WAAWC,qBACzFX,EAAAA,EAAAA,MAAA,KAAAD,SAAA,EAAGF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,gCAA+BC,SAAC,aAAY,IAAE7B,EAAQ0C,KAAKD,iBAAiB,wBA/BpF,IAuC3B,C","sources":["api/MapServices.js","hooks/useCountry.js","components/ModalCountry.jsx"],"sourcesContent":["\r\n\r\nconst URL_MAP =\"https://restcountries.com/v3.1\";\r\n\r\nexport async function peticionPaisNombre(name){\r\n\r\n    try{\r\n\r\n    const res = await fetch(`${URL_MAP}/name/${encodeURIComponent(name)}?fullText=true`);\r\n    if(!res.ok){\r\n        throw new Error(`Error en la peticion del Pais:${res.statusText}`);\r\n    }\r\n\r\n    const data = await res.json();\r\n    return data[0];\r\n    }catch (error){\r\n        throw new Error(error.message);\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { useState, useEffect } from \"react\";\r\nimport { peticionPaisNombre } from \"../api/MapServices\";\r\n\r\nexport function useCountry(countryName){\r\n    const [country, setCountry]=useState(null);\r\n    const [loading, setLoading]=useState(false);\r\n    const [error, setError]=useState(null)\r\n\r\n\r\n    useEffect(()=>{\r\n        if(!countryName) return; \r\n\r\n        const fetchData = async () => {\r\n            setLoading(true);\r\n            setError(null);\r\n\r\n         try{\r\n            const result = await peticionPaisNombre(countryName);\r\n            setCountry(result);\r\n         }   catch(err){\r\n            setError(err.message);\r\n            setCountry(null);\r\n         }finally{\r\n            setLoading(false);\r\n         }\r\n\r\n        };\r\n\r\n        fetchData();\r\n\r\n    },[countryName])\r\n\r\n    return{country, loading, error};\r\n}","import React from \"react\";\r\nimport { useCountry } from \"../hooks/useCountry\";\r\n\r\nexport default function CountryModal({ countryName, onClose }) {\r\n  const { country, loading, error } = useCountry(countryName);\r\n\r\n  if (!countryName) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-60 backdrop-blur-sm\">\r\n      <div className=\"bg-white rounded-3xl shadow-2xl w-96 max-w-full p-8 relative ring-2 ring-indigo-300\">\r\n        <button\r\n          onClick={onClose}\r\n          className=\"absolute top-4 right-4 text-gray-400 hover:text-indigo-600 text-3xl font-extrabold transition-colors\"\r\n          aria-label=\"Cerrar modal\"\r\n        >\r\n          ×\r\n        </button>\r\n\r\n        {loading ? (\r\n          <p className=\"text-center text-gray-500 text-lg animate-pulse\">Cargando...</p>\r\n        ) : error ? (\r\n          <p className=\"text-center text-red-600 font-semibold\">{error}</p>\r\n        ) : (\r\n          country && (\r\n            <div className=\"text-center space-y-4\">\r\n              <h2 className=\"text-3xl font-extrabold text-indigo-700\">{country.name.common}</h2>\r\n              <img\r\n                src={country.flags.svg}\r\n                alt={`Bandera de ${country.name.common}`}\r\n                className=\"w-40 h-auto mx-auto rounded-lg border-4 border-indigo-200 shadow-md\"\r\n              />\r\n              <div className=\"text-left space-y-2 mt-4 text-gray-700 font-medium\">\r\n                <p><span className=\"font-semibold text-indigo-600\">Capital:</span> {country.capital?.[0] || \"N/A\"}</p>\r\n                <p><span className=\"font-semibold text-indigo-600\">Región:</span> {country.region}</p>\r\n                <p><span className=\"font-semibold text-indigo-600\">Subregión:</span> {country.subregion}</p>\r\n                <p><span className=\"font-semibold text-indigo-600\">Población:</span> {country.population.toLocaleString()}</p>\r\n                <p><span className=\"font-semibold text-indigo-600\">Área:</span> {country.area.toLocaleString()} km²</p>\r\n              </div>\r\n            </div>\r\n          )\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["URL_MAP","useCountry","countryName","country","setCountry","useState","loading","setLoading","error","setError","useEffect","async","result","name","res","fetch","concat","encodeURIComponent","ok","Error","statusText","json","message","peticionPaisNombre","err","fetchData","CountryModal","_ref","_country$capital","onClose","_jsx","className","children","_jsxs","onClick","common","src","flags","svg","alt","capital","region","subregion","population","toLocaleString","area"],"sourceRoot":""}